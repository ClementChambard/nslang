#include io.nsh
#include opened_file.nsh
#include tok.nsh
#include token.nsh
#include ident_info.nsh
#include lexer.nsh
#include mem.nsh
#include diags.nsh
#include parser.nsh
#include ast_print.nsh

#include ast_nodes_type.nsh

fn init() {
    IdentInfo::add_keywords();
    init_type_data();
}

fn cleanup() {
    cleanup_type_data();
    OpenedFile::close_all();
    IdentInfo::remove_all();
}

fn main() {
    init();

    let lexer = Lexer::init();

    lexer.add_include_path("/home/clement/dev/nslang/stdlib/include");
    lexer.enter_source_file("example.ns");

    let parser = Parser::new(&lexer);

    let tu = parser->parse();
  
    print_ast(tu);

    parser->delete();



    // let out_token: Token*;
    // out_token = lexer.lex();
    // while (out_token->ty != TOK_EOF) {
    //     out_token->dump();
    //     free(out_token);
    //     out_token = lexer.lex();
    // }
    // free(out_token);

    // lexer.delete();

    cleanup();

    // test_ir();
}
