enum Tok: i64 {
    // SPECIAL
    TOK_UNKNOWN,
    TOK_EOF,

    // IDENTIFIERS
    TOK_IDENT,

    // CONSTANTS
    TOK_NUM,
    TOK_STR,
    TOK_CHR,

    // PUNCTUATION
    TOK_LPAREN,
    TOK_RPAREN,
    TOK_LBRACE,
    TOK_RBRACE,
    TOK_LSQUARE,
    TOK_RSQUARE,
    TOK_SEMI,
    TOK_COLON,
    TOK_COLONCOLON,
    TOK_PERIOD,
    TOK_ARROW,
    TOK_ELLIPSIS,
    TOK_GREATER,
    TOK_GREATERGREATER,
    TOK_COMMA,
    TOK_EQUAL,
    TOK_EXCLAIM,
    TOK_STAREQUAL,
    TOK_SLASHEQUAL,
    TOK_PERCENTEQUAL,
    TOK_PLUSEQUAL,
    TOK_MINUSEQUAL,
    TOK_LESSLESSEQUAL,
    TOK_GREATERGREATEREQUAL,
    TOK_AMPEQUAL,
    TOK_CARETEQUAL,
    TOK_PIPEEQUAL,
    TOK_QUESTION,
    TOK_PIPEPIPE,
    TOK_AMPAMP,
    TOK_PIPE,
    TOK_TILDE,
    TOK_CARET,
    TOK_AMP,
    TOK_EXCLAIMEQUAL,
    TOK_EQUALEQUAL,
    TOK_LESSEQUAL,
    TOK_LESS,
    TOK_GREATEREQUAL,
    TOK_SPACESHIP,
    TOK_LESSLESS,
    TOK_PLUS,
    TOK_PLUSPLUS,
    TOK_MINUS,
    TOK_MINUSMINUS,
    TOK_PERCENT,
    TOK_SLASH,
    TOK_STAR,
    TOK_PERIODSTAR,
    TOK_ARROWSTAR,

    // KEYWORDS
    TOK_KW_FN,
    TOK_KW_LET,
    TOK_KW_LIB,
    TOK_KW_TYPE,
    TOK_KW_STRUCT,
    TOK_KW_ENUM,
    TOK_KW_I8,
    TOK_KW_I16,
    TOK_KW_I32,
    TOK_KW_I64,
    TOK_KW_U8,
    TOK_KW_U16,
    TOK_KW_U32,
    TOK_KW_U64,
    TOK_KW_BOOL,
    TOK_KW_VOID,
    TOK_KW_SIZEOF,
    TOK_KW_CAST,
    TOK_KW_IF,
    TOK_KW_ELSE,
    TOK_KW_TRUE,
    TOK_KW_FALSE,
    TOK_KW_NULLPTR,
    TOK_KW_VAARG,
    TOK_KW_CASE,
    TOK_KW_DEFAULT,
    TOK_KW_SWITCH,
    TOK_KW_WHILE,
    TOK_KW_DO,
    TOK_KW_FOR,
    TOK_KW_CONTINUE,
    TOK_KW_BREAK,
    TOK_KW_RETURN,
};

// TODO: methods for named enums
lib fn tok_is_keyword(self: Tok) -> bool;
lib fn tok_is_builtin_type(self: Tok) -> bool;
lib fn tok_get_name(self: Tok) -> i8*;
