#include io.nsh
#include sdl3/SDL.nsh
#include GL/gl.nsh

struct Window {
  window: SDL_Window*;
  gl_context: SDL_GLContext;
  is_running: bool;
};

fn Window::new(w: Window*) init {
    SDL_Init(SDL_INIT_VIDEO);
    w->window = SDL_CreateWindow("test window", 1920, 1080, SDL_WINDOW_OPENGL);
    w->gl_context = SDL_GL_CreateContext(w->window);
    w->is_running = true;
}

fn cleanup(w: Window*) {
    SDL_GL_DestroyContext(w->gl_context);
    SDL_DestroyWindow(w->window);
    SDL_Quit();
}

fn main() {
    let w = Window::new();
    let ev: SDL_Event;

    while (w.is_running) {
        while (SDL_PollEvent(&ev)) {
            if (ev.type_ == 0x100) w.is_running = false;
            if (ev.type_ == 0x300) {
                // Keydown
                let key_event: SDL_KeyboardEvent*;
                key_event = cast<SDL_KeyboardEvent*>(&ev);
                print("%u\n", key_event->keysym.sym);
            }
        }
        glClearColor(1, 0, 0, 1);
        glClear(GL_COLOR_BUFFER_BIT);
        SDL_GL_SwapWindow(w.window);
    }

    cleanup(&w);
}
